{"version":3,"file":"static/js/681.c98f273b.chunk.js","mappings":"oMAyBA,UAlBgB,WAAO,IAAD,IACZA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA4BE,EAAAA,EAAAA,GAAmBC,EAAAA,GAAcH,GAArDI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAEd,OACE,gCAAGA,IAAa,SAAC,IAAD,KACV,wBAC4B,KAAzB,UAAAD,EAAKE,eAAL,eAAcC,SAClB,uEADI,UAENH,EAAKE,eAFC,aAEN,EAAcE,KAAI,SAAAC,GACnB,OAAO,2BAAgB,oCAAYA,EAAGC,WACpC,uBAAID,EAAGE,YADOF,EAAGG,GAEpB,QAKJ,C","sources":["components/Reviews.jsx"],"sourcesContent":["import React from \"react\";\nimport { fetchReviews } from \"./helpers/ApiService\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport useFetchAndLoading from \"./hooks/useFetchAndLoading\";\n\n\nconst Reviews = () => {\n  const { filmId } = useParams()\n  const { data, isLoading } = useFetchAndLoading(fetchReviews, filmId)\n\n  return (\n    <>{isLoading && <Loader />}\n          <ul>\n            {data.results?.length === 0\n        ?<div>We do not have any  reviews on this movie</div>\n      :data.results?.map(el => {\n      return <li key={el.id}><b>Author :{el.author}</b>\n        <p>{el.content}</p></li>\n    }) }\n      \n</ul>\n    \n  </>)\n}\nexport default Reviews"],"names":["filmId","useParams","useFetchAndLoading","fetchReviews","data","isLoading","results","length","map","el","author","content","id"],"sourceRoot":""}